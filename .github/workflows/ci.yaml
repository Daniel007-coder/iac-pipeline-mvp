name: Terraform CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest

    # ðŸ§© Mock AWS credentials so Terraform can run plan/validate in CI
    env:
      AWS_ACCESS_KEY_ID: "fake"
      AWS_SECRET_ACCESS_KEY: "fake"
      AWS_DEFAULT_REGION: "us-east-1"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ DEV ENVIRONMENT â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Terraform Init (Dev)
        working-directory: ./envs/dev
        run: terraform init

      - name: Terraform Validate (Dev)
        working-directory: ./envs/dev
        run: terraform validate

      - name: Terraform Format Check (Dev)
        working-directory: ./envs/dev
        run: terraform fmt -check

      - name: Terraform Plan (Dev)
        working-directory: ./envs/dev
        run: terraform plan -out=tfplan

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ PROD ENVIRONMENT â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Terraform Init (Prod)
        working-directory: ./envs/prod
        run: terraform init

      - name: Terraform Validate (Prod)
        working-directory: ./envs/prod
        run: terraform validate

      - name: Terraform Format Check (Prod)
        working-directory: ./envs/prod
        run: terraform fmt -check

      - name: Terraform Plan (Prod)
        working-directory: ./envs/prod
        run: terraform plan -out=tfplan
